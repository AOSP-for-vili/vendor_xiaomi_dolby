Xiaomi Dolby
==============

Getting Started
---------------
### For dolby media codecs to work add this line in your media codecs config (should be in vendor partition) and make sure your device supports c2 codecs :

```bash
<Include href="media_codecs_dolby_audio.xml" />
```

### To build, add the dolby effects in your device's audio effects config then, inherit the dolby config by adding this in your device's makefile :

```bash
$(call inherit-product, vendor/xiaomi/dolby/dolby.mk)
```

### Now, moving hidl definitions in manifest to device trees is completely absurd so stop overriding manifest in your device trees an example for such would be :

Changing these in BoardConfig makefile of your device tree:

```bash
DEVICE_FRAMEWORK_COMPATIBILITY_MATRIX_FILE :=
```
And

```bash
DEVICE_MANIFEST_FILE :=
```

To:

```bash
DEVICE_FRAMEWORK_COMPATIBILITY_MATRIX_FILE +=
```
And

```bash
DEVICE_MANIFEST_FILE +=
```

### The only change done above is changing := symbol to += so that manifest can't be overriden from device tree in BoardConfig makefile.

### Also, you might want to extract the blobs from your specific device's stock ROM. Simply run the following command with all your dump's partitions mounted. You can read more about extracting proprietary blobs in this LineageOS guide [here](https://wiki.lineageos.org/extracting_blobs_from_zips#extracting-proprietary-blobs-from-payload-based-otas) :
```bash
bash extract-files.sh <directory/to/your/dump>
```

### At the end an example commit to properly implement it in your device tree could be :
https://github.com/AOSP-for-vili/device_xiaomi_sm8350-common/commit/ac35e1de775451bd4f0e6f3d7d337408c5197b14
